{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "commonSettings": {
            "type": "object"
        },
        "osSettings": {
            "type": "object"
        },
        "storageSettings": {
            "type": "object"
        },
        "adminPassword": {
            "type": "securestring"
        },
        "machineSettings": {
            "type": "object"
        },
        "subnet": {
            "type": "object"
        },
        "replicatorPassword": {
            "type": "securestring"
        },
        "masterIpAddress": {
            "type": "string"
        },
        "dbType": {
            "type": "string"
        },
        "networkSettings": {
            "type": "object"
        }
    },
    "variables": {
        "namespace": "[parameters('commonSettings').namespace]",
        "subnetRef": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('subnet').vnet), '/subnets/', parameters('subnet').name)]",
        "storageAccountName": "[concat(parameters('storageSettings').name, variables('namespace'))]",
        "vmName": "[concat(variables('namespace'), 'vm')]",
        "nicName": "[concat(variables('namespace'), 'nic')]",
        "adminUsername": "[parameters('commonSettings').adminUsername]",
        "vmCount": "[parameters('machineSettings').vmCount]",
        "namingInfix": "[toLower(substring(concat('SlaveVMss', uniqueString(resourceGroup().id)), 0, 9))]",
        "slavenicName": "[concat(variables('namingInfix'), 'nic')]",
        "ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
        "virtualNetworkName": "[parameters('networkSettings').vnetName]",
        "subnetName": "[parameters('networkSettings').subnets.dmz.name]"
    },
    "resources": [
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), copyindex())]",
            "condition": "[contains(parameters('dbType'), 'Master')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicCopyLoop",
                "count": "[variables('vmCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmName'), copyindex())]",
            "condition": "[contains(parameters('dbType'), 'Master')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyindex())]"
            ],
            "copy": {
                "name": "vmCopyLoop",
                "count": "[variables('vmCount')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('machineSettings').vmSize]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmName'), copyindex())]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": "[parameters('osSettings').imageReference]",
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('storageSettings').name, parameters('storageSettings').map[copyindex()],'.blob.core.windows.net/vhds/', variables('vmName'), copyindex(), '-osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "name": "datadisk1",
                            "diskSizeGB": "[parameters('machineSettings').diskSize]",
                            "lun": 0,
                            "vhd": {
                                "uri": "[concat('http://', parameters('storageSettings').name, parameters('storageSettings').map[copyindex()],'.blob.core.windows.net/vhds/',variables('vmName'), copyindex(),'-datadisk1.vhd')]"
                            },
                            "caching": "None",
                            "createOption": "Empty"
                        },
                        {
                            "name": "datadisk2",
                            "diskSizeGB": "[parameters('machineSettings').diskSize]",
                            "lun": 1,
                            "vhd": {
                                "uri": "[concat('http://', parameters('storageSettings').name, parameters('storageSettings').map[copyindex()],'.blob.core.windows.net/vhds/',variables('vmName'), copyindex(),'-datadisk2.vhd')]"
                            },
                            "caching": "None",
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyindex()) )]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'), copyindex(), '/install_postgresql')]",
            "apiVersion": "2015-05-01-preview",
            "condition": "[contains(parameters('dbType'), 'Master')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyindex())]"
            ],
            "copy": {
                "name": "scriptCopyLoop",
                "count": "[variables('vmCount')]"
            },
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": "[parameters('osSettings').scripts]"
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('bash install_postgresql.sh -m ', parameters('masterIpAddress'), ' -s ', parameters('subnet').prefix, ' -t ', parameters('dbType') , ' -p ', parameters('replicatorPassword') )]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "name": "[variables('namingInfix')]",
            "location": "[resourceGroup().location]",
            "condition": "[contains(parameters('dbType'), 'SLAVE')]",
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('networkSettings').vnetName)]"
            ],
            "sku": {
                "name": "[parameters('machineSettings').vmSize]", 
                "tier": "Standard",
                "capacity": "[variables('vmCount')]"
            },
            "properties": {
                "overprovision": "true",
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "FromImage"
                        },
                        "imageReference": "[parameters('osSettings').imageReference]"
                    },
                    "osProfile": {
                        "computerNamePrefix": "[variables('namingInfix')]",
                        "adminUsername": "[variables('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]"
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[variables('slavenicName')]",
                                "properties": {
                                    "primary": "true",
                                    "ipConfigurations": [
                                        {
                                            "name": "[variables('ipConfigName')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                }
            }
        }
      ],
      "outputs": {
         "masterip": {
             "value": "[reference(concat(variables('nicName'),0)).ipConfigurations[0].properties.privateIPAddress]",
             "type": "string"
           }
        }
      }

